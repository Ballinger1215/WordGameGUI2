package wordsgui;

import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.BoxLayout;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author mark
 */
public class Game {
    int playerCounter;
    String[] pNames;
    int[] scores;
    JPanel pnl;
    PlayerPanel[] player;
    
    public Game(String[] pNames, int[] scores)
    {
        playerCounter = 0;
        player = new PlayerPanel[2];
        player[0] = new PlayerPanel(pNames[0]);
        player[1] = new PlayerPanel(pNames[1]);
        player[1].playerInput.setEnabled(false);
        JPanel words = new JPanel();
        
        player[0].playerInput.addKeyListener(new TextListener());
        player[1].playerInput.addKeyListener(new TextListener());
        
        JTextField wordField = new JTextField("-----");
        words.setMinimumSize(new Dimension(100,100));
        words.add(wordField);
        
        pnl = new JPanel();
        pnl = new JPanel(new BoxLayout(pnl, BoxLayout.X_AXIS));
        pnl.add(player[0]);
        pnl.add(words);
        pnl.add(player[1]);
        add(pnl);
        //repaint();
        //setVisible(true);

    }
    
    private class PlayerPanel extends JPanel {
        JLabel playerName, playerScore;
        JTextField playerInput;
        JList playerGuess;
        

        public PlayerPanel()
        {
            setLayout(new BoxLayout(this, BoxLayout.Y_AXIS));
            playerName = new JLabel();
            playerInput = new JTextField();
            String[] list = {"a","b","c"};
            playerGuess = new JList(list);
            playerScore = new JLabel();
            add(playerName);
            add(playerInput);
            add(playerGuess);
            add(playerScore);
            setVisible(true);
            
        }
        
        }
    
    private class TextListener implements KeyListener {

        private void checkGuess(char text) {
            if(false)
            {
                player[playerCounter].playerInput.setEnabled(false);
                playerCounter++;
                
                if (playerCounter == 2)
                    playerCounter = 0;
            }
        }

        @Override
        public void keyTyped(KeyEvent e) {
            return;
        }

        @Override
        public void keyPressed(KeyEvent e) {
            return;
        }

        @Override
        public void keyReleased(KeyEvent e) {
            return;
        }
    }
    
    
}
